// <auto-generated />
using System;
using BookService.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookService.API.Migrations
{
    [DbContext(typeof(BookDbContext))]
    partial class BookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookService.API.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookService.API.Entities.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("BookService.API.Entities.FlightSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationAirportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationCityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationCityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("FlightSectionDuration")
                        .HasColumnType("time");

                    b.Property<string>("OriginAirportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightSection");
                });

            modelBuilder.Entity("BookService.API.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Rate")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("BookService.API.Entities.HotelRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRoom");
                });

            modelBuilder.Entity("BookService.API.Entities.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("BookService.API.Entities.Flight", b =>
                {
                    b.HasOne("BookService.API.Entities.Book", null)
                        .WithMany("Flights")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("BookService.API.Entities.FlightSection", b =>
                {
                    b.HasOne("BookService.API.Entities.Flight", null)
                        .WithMany("Sections")
                        .HasForeignKey("FlightId");
                });

            modelBuilder.Entity("BookService.API.Entities.Hotel", b =>
                {
                    b.HasOne("BookService.API.Entities.Book", null)
                        .WithMany("Hotels")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("BookService.API.Entities.HotelRoom", b =>
                {
                    b.HasOne("BookService.API.Entities.Hotel", null)
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId");

                    b.OwnsOne("BookService.API.Entities.Guest", "Guest", b1 =>
                        {
                            b1.Property<Guid>("HotelRoomId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Adults")
                                .HasColumnType("int");

                            b1.Property<int>("Child")
                                .HasColumnType("int");

                            b1.HasKey("HotelRoomId");

                            b1.ToTable("HotelRoom");

                            b1.WithOwner()
                                .HasForeignKey("HotelRoomId");
                        });

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("BookService.API.Entities.Passenger", b =>
                {
                    b.HasOne("BookService.API.Entities.Book", null)
                        .WithMany("Passengers")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("BookService.API.Entities.Book", b =>
                {
                    b.Navigation("Flights");

                    b.Navigation("Hotels");

                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("BookService.API.Entities.Flight", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("BookService.API.Entities.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
